{"ast":null,"code":"var _jsxFileName = \"/home/hg/react-dapp/react-dapp/src/App.js\";\nimport React from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: {},\n      accounts: [],\n      balance: 0,\n      isLoading: true\n    };\n  }\n\n  async initWeb3() {\n    let web3 = this.state.web3;\n\n    if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      await web3.eth.requestAccounts().then(acct => this.setState({\n        accounts: [...acct]\n      }));\n      await web3.eth.getBalance(this.state.accounts[0]).then(wei => web3.utils.fromWei(wei)).then(bal => this.setState({\n        balance: bal\n      }));\n      alert('Modern Dapp Browser/Wallet Detected');\n    } else if (window.web3) {\n      web3 = new Web3(window.web3);\n      await web3.eth.getAccounts().then(acct => this.setState({\n        accounts: [...acct]\n      }));\n      await web3.eth.getBalance(this.state.accounts[0]).then(wei => web3.utils.fromWei(wei)).then(bal => this.setState({\n        balance: bal\n      }));\n      alert('Legacy Web3 Dapp Browser Detected');\n    } else if (!window.ethereum && !window.web3) {\n      alert('Ethereum Dapp Browser/Wallet Not Detected. Please Install Metamask or other Web3 Dapp Browser.');\n    }\n\n    this.setState({\n      isLoading: false,\n      web3: web3\n    });\n  }\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.state.isLoading ? !window.ethereum ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Please install web3 wallet or dapp browser.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 55\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Address: \", this.state.accounts, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 48\n        }, this), \"Balance: \", this.state.balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Dapp is loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hg/react-dapp/react-dapp/src/App.js"],"names":["React","Web3","App","Component","constructor","props","state","web3","accounts","balance","isLoading","initWeb3","window","ethereum","eth","requestAccounts","then","acct","setState","getBalance","wei","utils","fromWei","bal","alert","getAccounts","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Web3 from 'web3';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: {},\n      accounts: [],\n      balance: 0,\n      isLoading: true\n    }\n  }\n\n  async initWeb3() {\n    let web3 = this.state.web3;\n    if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      await web3.eth.requestAccounts().then(acct => this.setState({accounts: [...acct]}));\n      await web3.eth.getBalance(this.state.accounts[0]).then(wei => web3.utils.fromWei(wei)).then(bal => this.setState({balance: bal}));\n      alert('Modern Dapp Browser/Wallet Detected');\n    } else if (window.web3) {\n      web3 = new Web3(window.web3);\n      await web3.eth.getAccounts().then(acct => this.setState({accounts: [...acct]}));\n      await web3.eth.getBalance(this.state.accounts[0]).then(wei => web3.utils.fromWei(wei)).then(bal => this.setState({balance: bal}));\n      alert('Legacy Web3 Dapp Browser Detected');\n    } else if (!window.ethereum && !window.web3) {\n      alert('Ethereum Dapp Browser/Wallet Not Detected. Please Install Metamask or other Web3 Dapp Browser.')\n    }\n    this.setState({isLoading: false, web3: web3});\n  }\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          !this.state.isLoading ? (!window.ethereum ? <span>Please install web3 wallet or dapp browser.</span> :\n          <span>Address: {this.state.accounts} <br />Balance: {this.state.balance}</span>) :\n          <span>Dapp is loading...</span>\n        }\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}